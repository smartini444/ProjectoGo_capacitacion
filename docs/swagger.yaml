definitions:
  gin.H:
    additionalProperties: {}
    type: object
  primerProjecto_internal_entities_criptomonedas.Cotizacion:
    description: Estructura que define una cotización de criptomoneda.
    properties:
      cotizacion:
        description: |-
          Cotizacion es el valor de la criptomoneda en un momento específico.
          @example 50000.00
        type: number
      cripto_id:
        description: |-
          CriptoMoneda_ID es el identificador de la criptomoneda asociada.
          @example 1
        type: integer
      fecha:
        description: |-
          Fecha es la fecha y hora en que se registró la cotización.
          @example 2024-07-29T12:00:00Z
        type: string
      id:
        description: |-
          ID es el identificador único de la cotización.
          @example 123
        type: integer
      manual:
        description: |-
          Manual indica si la cotización fue ingresada manualmente.
          @example true
        type: boolean
      usuario_id:
        description: |-
          UsuarioId es el identificador del usuario que ingresó la cotización.
          @example 42
        type: integer
    type: object
  primerProjecto_internal_entities_criptomonedas.CriptoMoneda:
    description: Estructura que define una criptomoneda.
    properties:
      codigo:
        description: |-
          Codigo es el código de la criptomoneda.
          @example BTC
        type: string
      id:
        description: |-
          ID es el identificador único de la criptomoneda.
          @example 1
        type: integer
      nombre:
        description: |-
          Nombre es el nombre de la criptomoneda.
          @example Bitcoin
        type: string
    type: object
  primerProjecto_internal_entities_criptomonedas.TipoDocumento:
    enum:
    - DNI
    - pasaporte
    - cedula
    type: string
    x-enum-varnames:
    - DNI
    - Pasaporte
    - Cedula
  primerProjecto_internal_entities_criptomonedas.Usuario:
    description: Estructura que define a un usuario del sistema.
    properties:
      apellido:
        description: |-
          Apellidos son los apellidos del usuario.
          @example Perez
        type: string
      codigoUsuario:
        description: |-
          CodigoUsuario es el código de usuario.
          @example JP1990
        type: string
      email:
        description: |-
          Email es el correo electrónico del usuario.
          @example juan.perez@example.com
        type: string
      esta_activo:
        description: |-
          Esta_activo indica si el usuario está activo.
          @example true
        type: boolean
      fecha_Nacimiento:
        description: |-
          Fecha_Nacimiento es la fecha de nacimiento del usuario.
          @example 1990-01-01T00:00:00Z
        type: string
      fecha_registro:
        description: |-
          Fecha_registro es la fecha en que se registró el usuario.
          @example 2024-07-29T12:00:00Z
        type: string
      id:
        description: |-
          ID es el identificador único del usuario.
          @example 1
        type: integer
      nombre:
        description: |-
          Nombre es el nombre del usuario.
          @example Juan
        type: string
      tipoDocumento:
        allOf:
        - $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.TipoDocumento'
        description: |-
          TipoDocumento es el tipo de documento del usuario.
          @example DNI
    type: object
  primerProjecto_internal_entities_criptomonedas.UsuarioRequest:
    description: Estructura de la solicitud para crear un nuevo usuario con sus criptomonedas
      favoritas.
    properties:
      monedasFavoritas:
        description: |-
          MonedasFavoritas contiene una lista de IDs de las criptomonedas favoritas del usuario.
          @description Lista de IDs de las criptomonedas favoritas del usuario.
        items:
          type: string
        type: array
      usuario:
        allOf:
        - $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Usuario'
        description: |-
          Usuario contiene la información del usuario.
          @description Información del usuario.
    type: object
info:
  contact: {}
  description: app para cotizaciones de criptos
  title: Cripto Api
  version: "1.0"
paths:
  /cotizacion/manual/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a manual quote for a cryptocurrency for a specific user
        by their ID
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Cotización eliminada exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "ID inválido'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete manual cryptocurrency quote
      tags:
      - quotes
  /cotizacion/manual/{usuarioId}/{cotizacionId}:
    put:
      consumes:
      - application/json
      description: Update a manual quote for a cryptocurrency for a specific user
        by their ID
      parameters:
      - description: User ID
        in: path
        name: usuarioId
        required: true
        type: integer
      - description: Quote ID
        in: path
        name: cotizacionId
        required: true
        type: integer
      - description: Cryptocurrency Quote
        in: body
        name: cotizacion
        required: true
        schema:
          $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Cotizacion'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Cotización actualizada exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "ID inválido" or "Datos de cotización inválidos'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update manual cryptocurrency quote
      tags:
      - quotes
  /cotizaciones:
    post:
      consumes:
      - application/json
      description: Save a new quotation
      parameters:
      - description: Cotizacion to be saved
        in: body
        name: cotizacion
        required: true
        schema:
          $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Cotizacion'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with a message
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Save a quotation
      tags:
      - cryptocurrencies
  /cotization:
    post:
      consumes:
      - application/json
      description: Save a cryptocurrency along with its quote using the provided name
        and API
      parameters:
      - description: Cryptocurrency name
        in: query
        name: nombre
        required: true
        type: string
      - description: API for obtaining the quote
        in: query
        name: api
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with a message
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Save cryptocurrency with quote
      tags:
      - cryptocurrencies
  /cotization/manual:
    post:
      consumes:
      - application/json
      description: Register a manual quote for a cryptocurrency for a specific user
        by their ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      - description: Cryptocurrency Quote
        in: body
        name: cotizacion
        required: true
        schema:
          $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Cotizacion'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Cotización registrada exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "ID inválido" or "Datos de moneda inválidos'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register manual cryptocurrency quote
      tags:
      - quotes
  /cryptocurrencies:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all cryptocurrencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.CriptoMoneda'
            type: array
      summary: Get all cryptocurrencies
      tags:
      - cryptocurrencies
    post:
      consumes:
      - application/json
      description: Save una nueva criptomoneda
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.CriptoMoneda'
            type: array
      summary: Save una criptomoneda
      tags:
      - cryptocurrencies
  /cryptocurrencies/cryptocurrency/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a cryptocurrency by its ID
      parameters:
      - description: Cryptocurrency ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.CriptoMoneda'
      summary: Get cryptocurrency by ID
      tags:
      - cryptocurrencies
  /cryptocurrencies/lastcotization/{nombre}:
    get:
      consumes:
      - application/json
      description: Get the latest quote for a given cryptocurrency name
      parameters:
      - description: Cryptocurrency name
        in: path
        name: nombre
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with the latest quote
          schema:
            $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Cotizacion'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get latest quote by cryptocurrency name
      tags:
      - cryptocurrencies
  /cryptocurrencies/latest:
    get:
      consumes:
      - application/json
      description: Retrieves the most recent quotation for a cryptocurrency identified
        by its name.
      parameters:
      - description: Cryptocurrency name
        in: query
        name: nombre
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response with the latest quotation
          schema:
            $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Cotizacion'
        "400":
          description: 'error": "Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error": "Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieve the latest quotation for a given cryptocurrency name
      tags:
      - cryptocurrencies
  /cryptocurrency/{id}:
    put:
      consumes:
      - application/json
      description: Update the details of a cryptocurrency by its ID
      parameters:
      - description: Cryptocurrency ID
        in: path
        name: id
        required: true
        type: integer
      - description: Cryptocurrency Data
        in: body
        name: cryptocurrency
        required: true
        schema:
          $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.CriptoMoneda'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with a message
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update cryptocurrency by ID
      tags:
      - cryptocurrencies
  /usuarios:
    post:
      consumes:
      - application/json
      description: Create a new user along with their favorite cryptocurrencies
      parameters:
      - description: User and Favorite Cryptocurrencies
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.UsuarioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Usuario creado exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /usuarios/{id}:
    get:
      consumes:
      - application/json
      description: Get the details of a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Usuario'
        "400":
          description: 'error": "ID inválido'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'message": "Usuario no encontrado'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Partially update the details of an existing user by their ID. This
        can include updating their favorite cryptocurrencies.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User details to update, including favorite cryptocurrencies
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Usuario actualizado exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Partially update a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the details of an existing user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User details to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.Usuario'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Usuario actualizado exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user by ID
      tags:
      - users
  /usuarios/{id}/cotizaciones:
    get:
      consumes:
      - application/json
      description: Find all cryptocurrencies by filter for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Nombre
        in: query
        name: nombre
        type: string
      - description: Minimum Cotizacion
        in: query
        name: min_cotizacion
        type: number
      - description: Maximum Cotizacion
        in: query
        name: max_cotizacion
        type: number
      - description: Start Date in RFC3339 format
        in: query
        name: start_date
        type: string
      - description: End Date in RFC3339 format
        in: query
        name: end_date
        type: string
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page_number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with summary and data
          schema:
            additionalProperties: true
            type: object
      summary: Find all cryptocurrencies by filter
      tags:
      - cryptocurrencies
  /usuarios/{id}/monedas:
    get:
      consumes:
      - application/json
      description: Get the list of favorite cryptocurrencies for a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/primerProjecto_internal_entities_criptomonedas.CriptoMoneda'
            type: array
        "400":
          description: 'error": "ID inválido'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Find favorite cryptocurrencies by user ID
      tags:
      - users
  /usuarios/monedaFavorita:
    post:
      consumes:
      - application/json
      description: Add a favorite cryptocurrency to a user's list by their ID and
        the cryptocurrency's name
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      - description: Cryptocurrency Name
        in: query
        name: nombre
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "Moneda favorita guardada exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error": "ID inválido'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error": "Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add favorite cryptocurrency to user
      tags:
      - users
swagger: "2.0"
