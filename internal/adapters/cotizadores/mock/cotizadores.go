// Code generated by MockGen. DO NOT EDIT.
// Source: ./cotizadores.go
//
// Generated by this command:
//
//	mockgen -source=./cotizadores.go -destination=./mock/cotizadores.go -package mock
//

// Package mock is a generated GoMock package.
package mock

import (
	criptomonedas "primerProjecto/internal/entities/criptomonedas"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCotizador is a mock of Cotizador interface.
type MockCotizador struct {
	ctrl     *gomock.Controller
	recorder *MockCotizadorMockRecorder
}

// MockCotizadorMockRecorder is the mock recorder for MockCotizador.
type MockCotizadorMockRecorder struct {
	mock *MockCotizador
}

// NewMockCotizador creates a new mock instance.
func NewMockCotizador(ctrl *gomock.Controller) *MockCotizador {
	mock := &MockCotizador{ctrl: ctrl}
	mock.recorder = &MockCotizadorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCotizador) EXPECT() *MockCotizadorMockRecorder {
	return m.recorder
}

// GetCotizacionExterna mocks base method.
func (m *MockCotizador) GetCotizacionExterna(moneda, codigo, fiat string) (criptomonedas.Cotizacion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCotizacionExterna", moneda, codigo, fiat)
	ret0, _ := ret[0].(criptomonedas.Cotizacion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCotizacionExterna indicates an expected call of GetCotizacionExterna.
func (mr *MockCotizadorMockRecorder) GetCotizacionExterna(moneda, codigo, fiat any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCotizacionExterna", reflect.TypeOf((*MockCotizador)(nil).GetCotizacionExterna), moneda, codigo, fiat)
}
